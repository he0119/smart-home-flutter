trigger:
  branches:
    include:
    - master
    - refs/tags/*

variables:
  flutter_version: '1.15.17'

pool:
  vmImage: 'macOS-latest'

jobs:
  - job: Test
    steps:
    - task: FlutterInstall@0
      inputs:
        channel: beta
        version: custom
        customVersion: $(flutter_version)
    - task: FlutterTest@0
      inputs:
        projectDirectory: $(Build.SourcesDirectory)

  - job: Android
    dependsOn: Test
    condition: contains(variables['Build.SourceBranch'], 'tags')
    steps:
    - task: DownloadSecureFile@1
      name: androidKey
      inputs:
        secureFile: 'key.jks'
    - task: DownloadSecureFile@1
      name: androidKeySettings
      inputs:
        secureFile: 'key.properties'
    - script: |
        echo Installing android key
        sudo cp $(androidKey.secureFilePath) $(Build.SourcesDirectory)
        echo "s#storeFile=\(.*\)#storeFile=$(Build.SourcesDirectory)/key.jks#g"
        sudo sed "s#storeFile=\(.*\)#storeFile=$(Build.SourcesDirectory)/key.jks#g" $(androidKeySettings.secureFilePath) > $(Build.SourcesDirectory)/android/key.properties
      displayName: 'InstallingKey'
    - task: FlutterInstall@0
      inputs:
        channel: beta
        version: custom
        customVersion: $(flutter_version)
    - script: $(FlutterToolPath)/flutter build apk --split-per-abi -t ./lib/main_prod.dart
      displayName: 'FlutterBuild APK'
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(System.DefaultWorkingDirectory)/build/app/outputs/apk/release'
        artifactName: apk
      displayName: 'Publish APK'

  - job: Web
    dependsOn: Test
    condition: or(contains(variables['Build.SourceBranch'], 'master'), contains(variables['Build.SourceBranch'], 'tags'))
    steps:
    - task: FlutterInstall@0
      inputs:
        channel: beta
        version: custom
        customVersion: $(flutter_version)
    - script: $(FlutterToolPath)/flutter config --enable-web
      displayName: 'EnableWeb'
    - script: $(FlutterToolPath)/flutter build web -t ./lib/main_prod.dart
      displayName: 'FlutterBuild Web'
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(System.DefaultWorkingDirectory)/build/web'
        artifactName: web
      displayName: 'Publish Web'
